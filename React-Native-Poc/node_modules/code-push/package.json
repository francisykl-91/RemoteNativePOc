{
  "_args": [
    [
      {
        "raw": "code-push@1.11.2-beta",
        "scope": null,
        "escapedName": "code-push",
        "name": "code-push",
        "rawSpec": "1.11.2-beta",
        "spec": "1.11.2-beta",
        "type": "version"
      },
      "/Users/francis/Development/react-native-poc/React-Native-Poc/node_modules/react-native-code-push"
    ]
  ],
  "_from": "code-push@1.11.2-beta",
  "_id": "code-push@1.11.2-beta",
  "_inCache": true,
  "_location": "/code-push",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/code-push-1.11.2-beta.tgz_1492157507319_0.8837198761757463"
  },
  "_npmUser": {
    "name": "max-mironov",
    "email": "v-maximi@microsoft.com"
  },
  "_npmVersion": "4.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "code-push@1.11.2-beta",
    "scope": null,
    "escapedName": "code-push",
    "name": "code-push",
    "rawSpec": "1.11.2-beta",
    "spec": "1.11.2-beta",
    "type": "version"
  },
  "_requiredBy": [
    "/react-native-code-push"
  ],
  "_resolved": "https://registry.npmjs.org/code-push/-/code-push-1.11.2-beta.tgz",
  "_shasum": "642f5199edb0fd6d6d300e439883b03b8b252737",
  "_shrinkwrap": null,
  "_spec": "code-push@1.11.2-beta",
  "_where": "/Users/francis/Development/react-native-poc/React-Native-Poc/node_modules/react-native-code-push",
  "author": {
    "name": "Microsoft Corporation"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/code-push/issues"
  },
  "dependencies": {
    "q": "^1.4.1",
    "recursive-fs": "0.1.4",
    "slash": "1.0.0",
    "superagent": "^1.7.2",
    "superagent-proxy": "^1.0.0",
    "yazl": "^2.4.1"
  },
  "description": "Management SDK for the CodePush service",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "642f5199edb0fd6d6d300e439883b03b8b252737",
    "tarball": "https://registry.npmjs.org/code-push/-/code-push-1.11.2-beta.tgz"
  },
  "homepage": "https://microsoft.github.io/code-push",
  "license": "MIT",
  "main": "script/index.js",
  "maintainers": [
    {
      "name": "axemclion",
      "email": "code@nparashuram.com"
    },
    {
      "name": "bokang",
      "email": "buptkang@gmail.com"
    },
    {
      "name": "bretjohnson",
      "email": "bret.johnson@microsoft.com"
    },
    {
      "name": "max-mironov",
      "email": "v-maximi@microsoft.com"
    },
    {
      "name": "maximpop",
      "email": "maximpop@microsoft.com"
    },
    {
      "name": "pniko",
      "email": "patrick.nikoletich@microsoft.com"
    },
    {
      "name": "ryanjsalva",
      "email": "ryanjsalva@gmail.com"
    },
    {
      "name": "silhouettes",
      "email": "rich@rkhua.com"
    }
  ],
  "name": "code-push",
  "optionalDependencies": {},
  "readme": "# CodePush Management SDK (Node.js)\r\n\r\nA JavaScript library for programmatically managing your CodePush account (e.g. creating apps, promoting releases), which allows authoring Node.js-based build and/or deployment scripts, without needing to shell out to the [CLI](https://github.com/Microsoft/code-push/blob/master/cli/README.md).\r\n\r\n\r\n## Getting Started\r\n\r\n1. Create an access key to authenticate with the CodePush server using the following CodePush CLI command:\r\n\r\n    ```shell\r\n    code-push access-key add \"DESCRIPTION_OF_THE_KEY\"\r\n    ```\r\n    \r\n    If you already created a key that you want to use here, then you can retrieve it by running `code-push access-key ls` and using the value of the `Key` column for the key you wish to use.\r\n    \r\n2. Install the management SDK by running `npm install code-push --save`\r\n\r\n3. Import it using the following statement (using ES6 syntax as applicable):\r\n\r\n    ```javascript\r\n    var CodePush = require(\"code-push\");    \r\n    ```\r\n    \r\n4. Create an instance of the `CodePush` class, passing it the access key you created or retrieved in step #1:\r\n\r\n    ```javascript\r\n    var codePush = new CodePush(\"YOUR_ACCESS_KEY\");\r\n    ```\r\n\r\n5. Begin automating the management of your account! For more details on what you can do with this `codePush` object, refer to the API reference section below.\r\n\r\n## API Reference\r\n\r\nThe `code-push` module exports a single class (typically referred to as `CodePush`), which represents a proxy to the CodePush account management REST API. This class has a single constructor for authenticating with the CodePush service, and a collection of instance methods that correspond to the commands in the management [CLI](https://github.com/Microsoft/code-push/blob/master/cli/README.md), which allow you to programmatically control every aspect of your CodePush account.\r\n\r\n### Constructors\r\n\r\n- __CodePush(accessKey: string)__ - Creates a new instance of the CodePush management SDK, using the specified access key to authenticated with the server.\r\n\r\n### Methods\r\n\r\n- __addAccessKey(description: string): Promise&lt;AccessKey&gt;__ - Creates a new access key with the specified description (e.g. \"VSTS CI\").\r\n\r\n- __addApp(appName: string): Promise&lt;App&gt;__ - Creates a new CodePush app with the specified name.\r\n\r\n- __addCollaborator(appName: string, email: string): Promise&lt;void&gt;__ - Adds the specified CodePush user as a collaborator to the specified CodePush app.\r\n\r\n- __addDeployment(appName: string, deploymentName: string): Promise&lt;Deployment&gt;__ - Creates a new deployment with the specified name, and associated with the specified app.\r\n\r\n- __clearDeploymentHistory(appName: string, deploymentName: string): Promise&lt;void&gt;__ - Clears the release history associated with the specified app deployment.\r\n\r\n- __getAccessKey(accessKey: string): Promise&lt;AccessKey&gt;__ - Retrieves the metadata about the specific access key.\r\n\r\n- __getAccessKeys(): Promise&lt;AccessKey[]&gt;__ - Retrieves the list of access keys associated with your CodePush account.\r\n\r\n- __getApp(appName: string): Promise&lt;App&gt;__ - Retrieves the metadata about the specified app.\r\n\r\n- __getApps(): Promise&lt;App[]&gt;__ - Retrieves the list of apps associated with your CodePush account.\r\n\r\n- __getCollaborators(appName: string): Promise&lt;CollaboratorMap&gt;__ - Retrieves the list of collaborators associated with the specified app.\r\n\r\n- __getDeployment(appName: string, deploymentName: string): Promise&lt;Deployment&gt;__ - Retrieves the metadata for the specified app deployment.\r\n\r\n- __getDeploymentHistory(appName: string, deploymentName: string): Promise&lt;Package[]&gt;__ - Retrieves the list of releases that have been made to the specified app deployment.\r\n\r\n- __getDeploymentMetrics(appName: string, deploymentName): Promise&lt;DeploymentMetrics&gt;__ - Retrieves the installation metrics for the specified app deployment. \r\n\r\n- __getDeployments(appName: string): Promose&lt;Deployment[]&gt;__ - Retrieves the list of deployments associated with the specified app.\r\n\r\n- __patchRelease(appName: string, deploymentName: string, label: string, updateMetadata: PackageInfo): Promise&lt;void&gt;__ - Updates the specified release's metadata with the given information.\r\n\r\n- __promote(appName: string, sourceDeploymentName: string, destinationDeploymentName: string, updateMetadata: PackageInfo): Promise&lt;void&gt;__ - Promotes the latest release from one deployment to another for the specified app and updates the release with the given metadata.\r\n\r\n- __release(appName: string, deploymentName: string, updateContentsPath: string, targetBinaryVersion: string, updateMetadata: PackageInfo): Promise&lt;void&gt;__ - Releases a new update to the specified deployment with the given metadata.\r\n\r\n- __removeAccessKey(accessKey: string): Promise&lt;void&gt;__ - Removes the specified access key from your CodePush account.\r\n\r\n- __removeApp(appName: string): Promise&lt;void&gt;__ - Deletes the specified CodePush app from your account.\r\n\r\n- __removeCollaborator(appName: string, email: string): Promise&lt;void&gt;__ - Removes the specified account as a collaborator from the specified app.\r\n\r\n- __removeDeployment(appName: string, deploymentName: string): Promise&lt;void&gt;__ - Removes the specified deployment from the specified app.\r\n\r\n- __renameApp(oldAppName: string, newAppName: string): Promise&lt;void&gt;__ - Renames an existing app.\r\n\r\n- __renameDeployment(appName: string, oldDeploymentName: string, newDeploymentName: string): Promise&lt;void&gt;__ - Renames an existing deployment within the specified app.\r\n\r\n- __rollback(appName: string, deploymentName: string, targetRelease?: string): Promise&lt;void&gt;__ - Rolls back the latest release within the specified deployment. Optionally allows you to target a specific release in the deployment's history, as opposed to rolling to the previous release.\r\n\r\n- __transferApp(appName: string, email: string): Promise&lt;void&gt;__ - Transfers the ownership of the specified app to the specified account.\r\n\r\n### Error Handling\r\n\r\nWhen an error occurs in any of the methods, the promise will be rejected with a CodePushError object with the following properties:\r\n\r\n- __message__: A user-friendly message that describes the error.\r\n- __statusCode__: An HTTP response code that identifies the category of error:\r\n    - __CodePush.ERROR_GATEWAY_TIMEOUT__: A network error prevented you from connecting to the CodePush server.\r\n    - __CodePush.ERROR_INTERNAL_SERVER__: An error occurred internally on the CodePush server.\r\n    - __CodePush.ERROR_NOT_FOUND__: The resource you are attempting to retrieve does not exist.\r\n    - __CodePush.ERROR_CONFLICT__: The resource you are attempting to create already exists.\r\n    - __CodePush.ERROR_UNAUTHORIZED__: The access key you configured is invalid or expired.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Microsoft/code-push.git"
  },
  "scripts": {
    "test": "gulp"
  },
  "version": "1.11.2-beta"
}
